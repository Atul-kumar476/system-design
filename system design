#include <iostream>
#include <vector>
#include <string>

using namespace std;

// Book class to represent each book in the library
class Book {
private:
    string title;
    string author;
    bool available;

public:
    Book(string title, string author) : title(title), author(author), available(true) {}

    // Getter methods
    string getTitle() const {
        return title;
    }

    string getAuthor() const {
        return author;
    }

    bool isAvailable() const {
        return available;
    }

    // Method to borrow the book
    void borrowBook() {
        if (available) {
            available = false;
            cout << "Book \"" << title << "\" borrowed successfully." << endl;
        } else {
            cout << "Sorry, the book \"" << title << "\" is currently not available." << endl;
        }
    }

    // Method to return the book
    void returnBook() {
        available = true;
        cout << "Book \"" << title << "\" returned successfully." << endl;
    }
};

// Library class to manage the collection of books
class Library {
private:
    vector<Book> books;

public:
    // Method to add a book to the library
    void addBook(const Book& book) {
        books.push_back(book);
        cout << "Book \"" << book.getTitle() << "\" added to the library." << endl;
    }

    // Method to display all available books
    void displayAvailableBooks() const {
        cout << "Available Books:" << endl;
        for (const Book& book : books) {
            if (book.isAvailable()) {
                cout << "- " << book.getTitle() << " by " << book.getAuthor() << endl;
            }
        }
    }

    // Method to borrow a book from the library
    void borrowBook(const string& title) {
        for (Book& book : books) {
            if (book.getTitle() == title) {
                book.borrowBook();
                return;
            }
        }
        cout << "Book \"" << title << "\" not found in the library." << endl;
    }

    // Method to return a book to the library
    void returnBook(const string& title) {
        for (Book& book : books) {
            if (book.getTitle() == title) {
                book.returnBook();
                return;
            }
        }
        cout << "Book \"" << title << "\" not found in the library." << endl;
    }
};

int main() {
    Library library;

    // Adding some books to the library
    library.addBook(Book("The Great Gatsby", "F. Scott Fitzgerald"));
    library.addBook(Book("To Kill a Mockingbird", "Harper Lee"));
    library.addBook(Book("1984", "George Orwell"));

    // Displaying available books
    library.displayAvailableBooks();

    // Borrowing a book
    library.borrowBook("1984");
    library.borrowBook("To Kill a Mockingbird");

    // Displaying available books after borrowing
    library.displayAvailableBooks();

    // Returning a book
    library.returnBook("1984");

    // Displaying available books after returning
    library.displayAvailableBooks();

    return 0;
}
